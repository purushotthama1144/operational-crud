import { Injectable } from '@angular/core';
import {
  HttpInterceptor,
  HttpRequest,
  HttpHandler,
  HttpEvent,
} from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable()
export class TokenInterceptor implements HttpInterceptor {
  private authToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjk2NTY2MjQ0LCJpYXQiOjE2OTUyNzAyNDQsImp0aSI6ImU5MWM4MmEzY2YzNjRmNGFiODI2MGE1MTI5ZTkxY2MyIiwidXNlcl9pZCI6MSwiZnVsbF9uYW1lIjoiUmFnaHZlbmRyYSBLdW1hciIsInVzZXJfdGltZXpvbmUiOiJBc2lhL0tvbGthdGEiLCJwZXJtaXNzaW9ucyI6WyJjcmVhdGVfZW1haWxfc2V0dGluZ3MiLCJlZGl0X2VtYWlsX3NldHRpbmdzIiwiZGVsZXRlX2VtYWlsX3NldHRpbmdzIiwidmlld19lbWFpbF9zZXR0aW5ncyIsImxpc3RfZW1haWxfc2V0dGluZ3MiLCJjcmVhdGVfbWVldGluZ19zZXR0aW5ncyIsImVkaXRfbWVldGluZ19zZXR0aW5ncyIsImRlbGV0ZV9tZWV0aW5nX3NldHRpbmdzIiwidmlld19tZWV0aW5nX3NldHRpbmdzIiwibGlzdF9tZWV0aW5nX3NldHRpbmdzIiwiY3JlYXRlX3NvY2lhbF9tZWRpYV9zZXR0aW5ncyIsImVkaXRfc29jaWFsX21lZGlhX3NldHRpbmdzIiwiZGVsZXRlX3NvY2lhbF9tZWRpYV9zZXR0aW5ncyIsInZpZXdfc29jaWFsX21lZGlhX3NldHRpbmdzIiwibGlzdF9zb2NpYWxfbWVkaWFfc2V0dGluZ3MiLCJjcmVhdGVfdXNlcnMiLCJlZGl0X3VzZXJzIiwiZGVsZXRlX3VzZXJzIiwidmlld191c2VycyIsImxpc3RfdXNlcnMiLCJjcmVhdGVfcm9sZXMiLCJlZGl0X3JvbGVzIiwiZGVsZXRlX3JvbGVzIiwidmlld19yb2xlcyIsImxpc3Rfcm9sZXMiLCJjcmVhdGVfbGVhZHMiLCJlZGl0X2xlYWRzIiwiZGVsZXRlX2xlYWRzIiwidmlld19sZWFkcyIsImxpc3RfbGVhZHMiLCJjcmVhdGVfY29udGFjdHMiLCJlZGl0X2NvbnRhY3RzIiwiZGVsZXRlX2NvbnRhY3RzIiwidmlld19jb250YWN0cyIsImxpc3RfY29udGFjdHMiLCJjcmVhdGVfdGVtcGxhdGVzIiwiZWRpdF90ZW1wbGF0ZXMiLCJkZWxldGVfdGVtcGxhdGVzIiwidmlld190ZW1wbGF0ZXMiLCJsaXN0X3RlbXBsYXRlcyIsImNyZWF0ZV9zY2hlZHVsZSIsImVkaXRfc2NoZWR1bGUiLCJkZWxldGVfc2NoZWR1bGUiLCJ2aWV3X3NjaGVkdWxlIiwibGlzdF9zY2hlZHVsZSIsImNyZWF0ZV9wb3N0cyIsImVkaXRfcG9zdHMiLCJkZWxldGVfcG9zdHMiLCJ2aWV3X3Bvc3RzIiwibGlzdF9wb3N0cyIsImNyZWF0ZV9zY2hlZHVsZWRfcG9zdHMiLCJlZGl0X3NjaGVkdWxlZF9wb3N0cyIsImRlbGV0ZV9zY2hlZHVsZWRfcG9zdHMiLCJ2aWV3X3NjaGVkdWxlZF9wb3N0cyIsImxpc3Rfc2NoZWR1bGVkX3Bvc3RzIiwiY3JlYXRlX21lZXRpbmdzIiwiZWRpdF9tZWV0aW5ncyIsImRlbGV0ZV9tZWV0aW5ncyIsInZpZXdfbWVldGluZ3MiLCJsaXN0X21lZXRpbmdzIiwiY3JlYXRlX3RvZG8iLCJlZGl0X3RvZG8iLCJkZWxldGVfdG9kbyIsInZpZXdfdG9kbyIsImxpc3RfdG9kbyJdLCJvcmdhbml6YXRpb25faWQiOjEsInNob3dfaGlkZV9tb2R1bGUiOlsibGVhZF92b2ljZV9jYWxsIiwibGVhZF9zZW5kX3NtcyIsImxlYWRfc2VuZF93aGF0c2FwcCIsImxlYWRfc2VuZF9lbWFpbCIsImxlYWRfY3JlYXRlX25vdGUiLCJzaW5nbGVfbGVhZF90aW1lbGluZSIsImxlYWRfZGVsZXRlIiwibGVhZF9pbmZvX2ljb24iLCJ0YWtlX2FwcG9pbnRtZW50X2J1dHRvbiJdfQ.tGDL_7_fFUM7AY043njE-jux0DLG7ZoKar_X-9RIxpc';

  constructor() {}

  intercept(
    request: HttpRequest<any>,
    next: HttpHandler
  ): Observable<HttpEvent<any>> {
    const modifiedRequest = request.clone({
      setHeaders: {
        Authorization: `Bearer ${this.authToken}`,
      },
    });

    return next.handle(modifiedRequest);
  }
}
